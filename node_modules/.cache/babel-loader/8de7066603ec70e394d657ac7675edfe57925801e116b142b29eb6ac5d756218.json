{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\dashlite-main\\\\src\\\\pages\\\\components\\\\Carousel.js\";\nimport React from \"react\";\nimport Content from \"../../layout/content/Content\";\nimport Head from \"../../layout/head/Head\";\nimport BasicCarousel from \"../../components/partials/carousel/Basic\";\nimport ControlsCarousel from \"../../components/partials/carousel/Controls\";\nimport CaptionsCarousel from \"../../components/partials/carousel/Captions\";\nimport FadeCarousel from \"../../components/partials/carousel/Fade\";\nimport { Block, BlockHead, BlockHeadContent, BlockTitle, BlockDes, BackTo } from \"../../components/block/Block\";\nimport { PreviewCard, CodeBlock } from \"../../components/preview/Preview\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarouselPage = ({\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      title: \"Carousel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      page: \"component\",\n      children: [/*#__PURE__*/_jsxDEV(BlockHead, {\n        size: \"lg\",\n        wide: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(BlockHeadContent, {\n          children: [/*#__PURE__*/_jsxDEV(BackTo, {\n            link: \"/components\",\n            icon: \"arrow-left\",\n            children: \"Components\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BlockTitle, {\n            tag: \"h2\",\n            className: \"fw-normal\",\n            children: \"Carousel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BlockDes, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lead\",\n              children: [\"A slideshow component for cycling through elements or slides of text\\u2014like a carousel. To use it\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: [\"Import\", ` {Carousel, CarouselItem, CarouselControl, CarouselIndicators } `, \"from \\\"reactstrap\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this), \". Visit the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://reactstrap.github.io/?path=/docs/components-carousel--carousel\",\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: \"Reactstrap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), \" \", \"library for detailed instructions.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(BlockHead, {\n          children: /*#__PURE__*/_jsxDEV(BlockHeadContent, {\n            children: [/*#__PURE__*/_jsxDEV(BlockTitle, {\n              tag: \"h5\",\n              children: \"Basic Examples\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Carousels don\\u2019t automatically normalize slide dimensions. You may need to use additional utilities to appropriate function.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PreviewCard, {\n          children: /*#__PURE__*/_jsxDEV(BasicCarousel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n          language: \"jsx\",\n          children: `const items = [\n  {\n    src: SlideA,\n    altText: 'Slide 1'\n  },\n  {\n    src: SlideB,\n    altText: 'Slide 2'\n  },\n  {\n    src: SlideC,\n    altText: 'Slide 3'\n  }\n];\n\nconst BasicCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      {slides}\n    </Carousel>\n  );\n}\n`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(BlockHead, {\n          children: /*#__PURE__*/_jsxDEV(BlockHeadContent, {\n            children: [/*#__PURE__*/_jsxDEV(BlockTitle, {\n              tag: \"h5\",\n              children: \"With Controls & Indicators\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You can add the indicators to the carousel, as well as the previous and next controls too.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PreviewCard, {\n          children: /*#__PURE__*/_jsxDEV(ControlsCarousel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n          language: \"jsx\",\n          children: `const items = [\n  {\n    src: SlideA,\n    altText: 'Slide 1'\n  },\n  {\n    src: SlideB,\n    altText: 'Slide 2'\n  },\n  {\n    src: SlideC,\n    altText: 'Slide 3'\n  }\n];\n\nconst BasicCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}\n            `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(BlockHead, {\n          children: /*#__PURE__*/_jsxDEV(BlockHeadContent, {\n            children: [/*#__PURE__*/_jsxDEV(BlockTitle, {\n              tag: \"h5\",\n              children: \"With Captions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Add captions to your slides easily with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".carousel-caption\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 61\n              }, this), \" element within any\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".carousel-item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), \". They can be easily hidden on smaller viewports, as shown below, with optional \", /*#__PURE__*/_jsxDEV(Link, {\n                to: process.env.PUBLIC_URL + '/components/util-display',\n                children: \"display utilities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 26\n              }, this), \". We hide them initially with \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".d-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 143\n              }, this), \" and bring them back on medium-sized devices with \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".d-md-block\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 56\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PreviewCard, {\n          children: /*#__PURE__*/_jsxDEV(CaptionsCarousel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n          language: \"jsx\",\n          children: `const items = [\n  {\n    src: SlideA,\n    altText: 'Slide 1',\n    captionHead: 'First slide label',\n    captionText: 'Nulla vitae elit libero, a pharetra augue mollis interdum.'\n  },\n  {\n    src: SlideB,\n    altText: 'Slide 2',\n    captionHead: 'Second slide label',\n    captionText: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n  },\n  {\n    src: SlideC,\n    altText: 'Slide 3',\n    captionHead: 'Third slide label',\n    captionText: 'Praesent commodo cursus magna, vel scelerisque nisl consectetur.'\n  }\n];\n\nconst BasicCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        className=\"text-white\"\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n        <CarouselCaption captionText={item.captionText} captionHeader={item.captionHead} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(BlockHead, {\n          children: /*#__PURE__*/_jsxDEV(BlockHeadContent, {\n            children: [/*#__PURE__*/_jsxDEV(BlockTitle, {\n              tag: \"h5\",\n              children: \"Crossfade Effect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".carousel-fade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this), \" to your carousel to animate slides with a fade transition instead of a slide.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PreviewCard, {\n          children: /*#__PURE__*/_jsxDEV(FadeCarousel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n          language: \"jsx\",\n          children: `const items = [\n  {\n    src: SlideA,\n    altText: 'Slide 1'\n  },\n  {\n    src: SlideB,\n    altText: 'Slide 2'\n  },\n  {\n    src: SlideC,\n    altText: 'Slide 3'\n  }\n];\n\nconst BasicCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      className=\"carousel-fade\"\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = CarouselPage;\nexport default CarouselPage;\nvar _c;\n$RefreshReg$(_c, \"CarouselPage\");","map":{"version":3,"names":["React","Content","Head","BasicCarousel","ControlsCarousel","CaptionsCarousel","FadeCarousel","Block","BlockHead","BlockHeadContent","BlockTitle","BlockDes","BackTo","PreviewCard","CodeBlock","Link","jsxDEV","_jsxDEV","CarouselPage","props","Fragment","children","title","fileName","_jsxFileName","lineNumber","columnNumber","page","size","wide","link","icon","tag","className","href","target","rel","language","to","process","env","PUBLIC_URL","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/dashlite-main/src/pages/components/Carousel.js"],"sourcesContent":["import React from \"react\";\nimport Content from \"../../layout/content/Content\";\nimport Head from \"../../layout/head/Head\";\n\nimport BasicCarousel from \"../../components/partials/carousel/Basic\";\nimport ControlsCarousel from \"../../components/partials/carousel/Controls\";\nimport CaptionsCarousel from \"../../components/partials/carousel/Captions\";\nimport FadeCarousel from \"../../components/partials/carousel/Fade\";\n\n\nimport { Block, BlockHead, BlockHeadContent, BlockTitle, BlockDes, BackTo } from \"../../components/block/Block\";\nimport { PreviewCard, CodeBlock } from \"../../components/preview/Preview\";\nimport { Link } from \"react-router-dom\";\n\n\nconst CarouselPage = ({ ...props }) => {\n  return (\n    <React.Fragment>\n      <Head title=\"Carousel\" />\n      <Content page=\"component\">\n        <BlockHead size=\"lg\" wide=\"sm\">\n          <BlockHeadContent>\n            <BackTo link=\"/components\" icon=\"arrow-left\">\n              Components\n            </BackTo>\n            <BlockTitle tag=\"h2\" className=\"fw-normal\">\n              Carousel\n            </BlockTitle>\n            <BlockDes>\n              <p className=\"lead\">\n                A slideshow component for cycling through elements or slides of text—like a carousel. To use it{\" \"}\n                <code>\n                  Import\n                  {` {Carousel, CarouselItem, CarouselControl, CarouselIndicators } `}\n                  from \"reactstrap\"\n                </code>\n                . Visit the{\" \"}\n                <a href={\"https://reactstrap.github.io/?path=/docs/components-carousel--carousel\"} target=\"_blank\" rel=\"noreferrer\">\n                  Reactstrap\n                </a>{\" \"}\n                library for detailed instructions.\n              </p>\n            </BlockDes>\n          </BlockHeadContent>\n        </BlockHead>\n\n        <Block size=\"lg\">\n          <BlockHead>\n            <BlockHeadContent>\n              <BlockTitle tag=\"h5\">Basic Examples</BlockTitle>\n              <p>\n                Carousels don’t automatically normalize slide dimensions. You may need to use additional utilities to\n                appropriate function.\n              </p>\n            </BlockHeadContent>\n          </BlockHead>\n          <PreviewCard>\n            <BasicCarousel />\n          </PreviewCard>\n          <CodeBlock language=\"jsx\">\n            {`const items = [\n  {\n    src: SlideA,\n    altText: 'Slide 1'\n  },\n  {\n    src: SlideB,\n    altText: 'Slide 2'\n  },\n  {\n    src: SlideC,\n    altText: 'Slide 3'\n  }\n];\n\nconst BasicCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      {slides}\n    </Carousel>\n  );\n}\n`}\n          </CodeBlock>\n        </Block>\n        <Block size=\"lg\">\n          <BlockHead>\n            <BlockHeadContent>\n              <BlockTitle tag=\"h5\">With Controls &amp; Indicators</BlockTitle>\n              <p>You can add the indicators to the carousel, as well as the previous and next controls too.</p>\n            </BlockHeadContent>\n          </BlockHead>\n          <PreviewCard>\n            <ControlsCarousel />\n          </PreviewCard>\n          <CodeBlock language=\"jsx\">\n            {`const items = [\n  {\n    src: SlideA,\n    altText: 'Slide 1'\n  },\n  {\n    src: SlideB,\n    altText: 'Slide 2'\n  },\n  {\n    src: SlideC,\n    altText: 'Slide 3'\n  }\n];\n\nconst BasicCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}\n            `}\n          </CodeBlock>\n        </Block>\n        <Block size=\"lg\">\n          <BlockHead>\n            <BlockHeadContent>\n              <BlockTitle tag=\"h5\">With Captions</BlockTitle>\n              <p>\n                Add captions to your slides easily with the <code>.carousel-caption</code> element within any{\" \"}\n                <code>.carousel-item</code>. They can be easily hidden on smaller viewports, as shown below, with\n                optional <Link to={process.env.PUBLIC_URL + '/components/util-display'}>display utilities</Link>. We hide them initially with <code>.d-none</code> and bring\n                them back on medium-sized devices with <code>.d-md-block</code>.\n              </p>\n            </BlockHeadContent>\n          </BlockHead>\n          <PreviewCard>\n            <CaptionsCarousel />\n          </PreviewCard>\n          <CodeBlock language=\"jsx\">\n            {`const items = [\n  {\n    src: SlideA,\n    altText: 'Slide 1',\n    captionHead: 'First slide label',\n    captionText: 'Nulla vitae elit libero, a pharetra augue mollis interdum.'\n  },\n  {\n    src: SlideB,\n    altText: 'Slide 2',\n    captionHead: 'Second slide label',\n    captionText: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n  },\n  {\n    src: SlideC,\n    altText: 'Slide 3',\n    captionHead: 'Third slide label',\n    captionText: 'Praesent commodo cursus magna, vel scelerisque nisl consectetur.'\n  }\n];\n\nconst BasicCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        className=\"text-white\"\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n        <CarouselCaption captionText={item.captionText} captionHeader={item.captionHead} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}`}\n          </CodeBlock>\n        </Block>\n        <Block size=\"lg\">\n          <BlockHead>\n            <BlockHeadContent>\n              <BlockTitle tag=\"h5\">Crossfade Effect</BlockTitle>\n              <p>\n                Add <code>.carousel-fade</code> to your carousel to animate slides with a fade transition instead of a\n                slide.\n              </p>\n            </BlockHeadContent>\n          </BlockHead>\n          <PreviewCard>\n            <FadeCarousel />\n          </PreviewCard>\n          <CodeBlock language=\"jsx\">\n            {`const items = [\n  {\n    src: SlideA,\n    altText: 'Slide 1'\n  },\n  {\n    src: SlideB,\n    altText: 'Slide 2'\n  },\n  {\n    src: SlideC,\n    altText: 'Slide 3'\n  }\n];\n\nconst BasicCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      className=\"carousel-fade\"\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}`}\n          </CodeBlock>\n        </Block>\n      </Content>\n    </React.Fragment>\n  );\n};\n\nexport default CarouselPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}